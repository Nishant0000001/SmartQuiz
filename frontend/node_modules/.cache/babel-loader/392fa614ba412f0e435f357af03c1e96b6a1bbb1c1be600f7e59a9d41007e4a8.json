{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mystuff\\\\Quiz2.O App\\\\frontend\\\\src\\\\components\\\\AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AdminLogin from './AdminLogin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [newQuestion, setNewQuestion] = useState({\n    type: '',\n    question: '',\n    option_a: '',\n    option_b: '',\n    option_c: '',\n    option_d: '',\n    correct_answer: '',\n    timer: 0\n  });\n\n  // Check if the admin is logged in\n  useEffect(() => {\n    const token = localStorage.getItem('jwt_token');\n    if (token) {\n      setIsLoggedIn(true);\n      fetchQuestions();\n    }\n  }, []);\n\n  // Fetch quiz questions from the backend\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/quiz', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwt_token')}` // Add JWT token\n        }\n      });\n      setQuestions(response.data);\n    } catch (err) {\n      console.error('Error fetching questions:', err);\n    }\n  };\n\n  // Add new question to the database\n  const handleAddQuestion = async () => {\n    try {\n      await axios.post('http://localhost:3000/add-question', newQuestion, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwt_token')}` // Add JWT token\n        }\n      });\n      fetchQuestions(); // Refresh question list\n    } catch (err) {\n      console.error('Error adding question:', err);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('jwt_token');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(AdminLogin, {\n      onLoginSuccess: () => setIsLoggedIn(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Question\",\n          value: newQuestion.question,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            question: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Option A\",\n          value: newQuestion.option_a,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            option_a: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Option B\",\n          value: newQuestion.option_b,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            option_b: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Option C\",\n          value: newQuestion.option_c,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            option_c: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Option D\",\n          value: newQuestion.option_d,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            option_d: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Correct Answer\",\n          value: newQuestion.correct_answer,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            correct_answer: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Timer (seconds)\",\n          value: newQuestion.timer,\n          onChange: e => setNewQuestion({\n            ...newQuestion,\n            timer: parseInt(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddQuestion,\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Quiz Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: q.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"3kxzoF527RBlk99sr02QMGgYtMQ=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","AdminLogin","jsxDEV","_jsxDEV","AdminDashboard","_s","isLoggedIn","setIsLoggedIn","questions","setQuestions","newQuestion","setNewQuestion","type","question","option_a","option_b","option_c","option_d","correct_answer","timer","token","localStorage","getItem","fetchQuestions","response","get","headers","Authorization","data","err","console","error","handleAddQuestion","post","handleLogout","removeItem","children","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","target","parseInt","map","q","id","_c","$RefreshReg$"],"sources":["C:/Mystuff/Quiz2.O App/frontend/src/components/AdminLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AdminLogin from './AdminLogin';\r\n\r\nconst AdminDashboard = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [newQuestion, setNewQuestion] = useState({\r\n    type: '',\r\n    question: '',\r\n    option_a: '',\r\n    option_b: '',\r\n    option_c: '',\r\n    option_d: '',\r\n    correct_answer: '',\r\n    timer: 0,\r\n  });\r\n\r\n  // Check if the admin is logged in\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('jwt_token');\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      fetchQuestions();\r\n    }\r\n  }, []);\r\n\r\n  // Fetch quiz questions from the backend\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/quiz', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('jwt_token')}`, // Add JWT token\r\n        },\r\n      });\r\n      setQuestions(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching questions:', err);\r\n    }\r\n  };\r\n\r\n  // Add new question to the database\r\n  const handleAddQuestion = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3000/add-question', newQuestion, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('jwt_token')}`, // Add JWT token\r\n        },\r\n      });\r\n      fetchQuestions(); // Refresh question list\r\n    } catch (err) {\r\n      console.error('Error adding question:', err);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('jwt_token');\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isLoggedIn ? (\r\n        <AdminLogin onLoginSuccess={() => setIsLoggedIn(true)} />\r\n      ) : (\r\n        <div>\r\n          <h2>Admin Dashboard</h2>\r\n          <button onClick={handleLogout}>Logout</button>\r\n          <div>\r\n            <h3>Add New Question</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Question\"\r\n              value={newQuestion.question}\r\n              onChange={(e) =>\r\n                setNewQuestion({ ...newQuestion, question: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Option A\"\r\n              value={newQuestion.option_a}\r\n              onChange={(e) =>\r\n                setNewQuestion({ ...newQuestion, option_a: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Option B\"\r\n              value={newQuestion.option_b}\r\n              onChange={(e) =>\r\n                setNewQuestion({ ...newQuestion, option_b: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Option C\"\r\n              value={newQuestion.option_c}\r\n              onChange={(e) =>\r\n                setNewQuestion({ ...newQuestion, option_c: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Option D\"\r\n              value={newQuestion.option_d}\r\n              onChange={(e) =>\r\n                setNewQuestion({ ...newQuestion, option_d: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Correct Answer\"\r\n              value={newQuestion.correct_answer}\r\n              onChange={(e) =>\r\n                setNewQuestion({ ...newQuestion, correct_answer: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Timer (seconds)\"\r\n              value={newQuestion.timer}\r\n              onChange={(e) =>\r\n                setNewQuestion({ ...newQuestion, timer: parseInt(e.target.value) })\r\n              }\r\n            />\r\n            <button onClick={handleAddQuestion}>Add Question</button>\r\n          </div>\r\n          <div>\r\n            <h3>Quiz Questions</h3>\r\n            {questions.map((q) => (\r\n              <div key={q.id}>\r\n                <p>{q.question}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}