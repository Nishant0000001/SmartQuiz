{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mystuff\\\\Quiz2.O App\\\\frontend\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard({\n  userId\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({}); // { [question_id]: 'A' }\n\n  useEffect(() => {\n    axios.get('http://localhost:3000/quiz').then(res => {\n      setQuestions(res.data);\n    }).catch(err => {\n      console.error('❌ Error fetching quiz:', err);\n    });\n  }, []);\n  const handleOptionChange = (questionId, selectedOption) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: selectedOption\n    }));\n  };\n  const handleSubmit = () => {\n    // You can enhance this to submit answers to DB or compare locally\n    console.log('Submitted answers:', answers);\n    alert('✅ Quiz submitted! Check console for submitted answers.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          border: '1px solid #ccc',\n          padding: '15px',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Q\", index + 1, \": \", q.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: ['A', 'B', 'C', 'D'].map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              margin: '5px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${q.id}`,\n              value: opt,\n              checked: answers[q.id] === opt,\n              onChange: () => handleOptionChange(q.id, opt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this), opt === 'A' && ` ${q.option_a}`, opt === 'B' && ` ${q.option_b}`, opt === 'C' && ` ${q.option_c}`, opt === 'D' && ` ${q.option_d}`]\n          }, opt, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        marginTop: '20px',\n        fontSize: '18px',\n        padding: '10px 20px'\n      },\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"oYVJJyJHz36kVu40mwh9jR1WCQ0=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","UserDashboard","userId","_s","questions","setQuestions","answers","setAnswers","get","then","res","data","catch","err","console","error","handleOptionChange","questionId","selectedOption","prev","handleSubmit","log","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","q","index","marginBottom","border","borderRadius","question","opt","display","margin","type","name","id","value","checked","onChange","option_a","option_b","option_c","option_d","onClick","marginTop","fontSize","_c","$RefreshReg$"],"sources":["C:/Mystuff/Quiz2.O App/frontend/src/components/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UserDashboard({ userId }) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({}); // { [question_id]: 'A' }\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/quiz')\r\n      .then(res => {\r\n        setQuestions(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.error('❌ Error fetching quiz:', err);\r\n      });\r\n  }, []);\r\n\r\n  const handleOptionChange = (questionId, selectedOption) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: selectedOption,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // You can enhance this to submit answers to DB or compare locally\r\n    console.log('Submitted answers:', answers);\r\n\r\n    alert('✅ Quiz submitted! Check console for submitted answers.');\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Quiz</h2>\r\n\r\n      {questions.length === 0 ? (\r\n        <p>Loading quiz questions...</p>\r\n      ) : (\r\n        <form>\r\n          {questions.map((q, index) => (\r\n            <div key={q.id} style={{ marginBottom: '20px', border: '1px solid #ccc', padding: '15px', borderRadius: '8px' }}>\r\n              <h3>Q{index + 1}: {q.question}</h3>\r\n              <div>\r\n                {['A', 'B', 'C', 'D'].map(opt => (\r\n                  <label key={opt} style={{ display: 'block', margin: '5px 0' }}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name={`question-${q.id}`}\r\n                      value={opt}\r\n                      checked={answers[q.id] === opt}\r\n                      onChange={() => handleOptionChange(q.id, opt)}\r\n                    />\r\n                    {opt === 'A' && ` ${q.option_a}`}\r\n                    {opt === 'B' && ` ${q.option_b}`}\r\n                    {opt === 'C' && ` ${q.option_c}`}\r\n                    {opt === 'D' && ` ${q.option_d}`}\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </form>\r\n      )}\r\n\r\n      <button onClick={handleSubmit} style={{ marginTop: '20px', fontSize: '18px', padding: '10px 20px' }}>\r\n        Submit Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}