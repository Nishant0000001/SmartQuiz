{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mystuff\\\\Quiz2.O App\\\\frontend\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [hasStarted, setHasStarted] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState({});\n  const timerRef = useRef(null);\n  const userId = localStorage.getItem('userId');\n\n  // Fetch questions\n  useEffect(() => {\n    axios.get('http://localhost:3000/quiz').then(res => {\n      setQuestions(res.data);\n      const initialTimers = {};\n      res.data.forEach(q => {\n        initialTimers[q.id] = q.timer || 30;\n      });\n      setTimeRemaining(initialTimers);\n      setLoading(false);\n    }).catch(err => {\n      console.error('❌ Error fetching quiz:', err);\n      setLoading(false);\n    });\n  }, []);\n\n  // Timer logic on question change & start\n  useEffect(() => {\n    if (!hasStarted || submitted || questions.length === 0) return;\n    if (timerRef.current) clearInterval(timerRef.current);\n    const currentQuestion = questions[currentIndex];\n    if (!currentQuestion) return;\n    const qid = currentQuestion.id;\n    timerRef.current = setInterval(() => {\n      setTimeRemaining(prev => {\n        const updated = {\n          ...prev\n        };\n        if (updated[qid] <= 1) {\n          clearInterval(timerRef.current);\n          updated[qid] = 0;\n          setTimeout(() => handleAutoNext(), 500);\n        } else {\n          updated[qid] -= 1;\n        }\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(timerRef.current);\n  }, [currentIndex, hasStarted, submitted, questions]);\n  const handleOptionChange = (questionId, selectedOption) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: selectedOption\n    }));\n  };\n  const handleAutoNext = () => {\n    // Find next unanswered question with time remaining after currentIndex\n    const nextIndexForward = questions.findIndex((q, idx) => idx > currentIndex && !answers[q.id] && timeRemaining[q.id] > 0);\n    if (nextIndexForward !== -1) {\n      setCurrentIndex(nextIndexForward);\n      return;\n    }\n\n    // If none forward, check unanswered with time left anywhere\n    const anyUnansweredIndex = questions.findIndex(q => !answers[q.id] && timeRemaining[q.id] > 0);\n    if (anyUnansweredIndex !== -1) {\n      setCurrentIndex(anyUnansweredIndex);\n      return;\n    }\n\n    // If no unanswered questions with time left, submit quiz\n    // **Important change:** Only auto-submit here if all timers are 0\n    // So check if all timers are 0 before submitting\n    const allTimersZero = questions.every(q => timeRemaining[q.id] === 0);\n    if (allTimersZero) {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = async () => {\n    if (submitted) return;\n    let calculatedScore = 0;\n    const responses = [];\n    questions.forEach(q => {\n      const selected = answers[q.id];\n      const isCorrect = selected === q.correct_answer;\n      if (selected) {\n        responses.push({\n          question_id: q.id,\n          selected_answer: selected,\n          is_correct: isCorrect\n        });\n        if (isCorrect) calculatedScore += 1;\n      }\n    });\n    setScore(calculatedScore);\n    setSubmitted(true);\n    clearInterval(timerRef.current);\n    try {\n      await axios.post('http://localhost:3000/submit-quiz', {\n        user_id: userId,\n        score: calculatedScore,\n        responses\n      });\n      console.log('✅ Quiz submitted');\n    } catch (err) {\n      console.error('❌ Failed to submit quiz:', err);\n    }\n  };\n\n  // Pause current timer before navigation\n  const pauseCurrentTimer = () => {\n    if (timerRef.current) clearInterval(timerRef.current);\n  };\n\n  // Navigate to next question & pause current timer\n  const goNext = () => {\n    pauseCurrentTimer();\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(prev => prev + 1);\n    }\n  };\n\n  // Navigate to previous question & pause current timer\n  const goPrev = () => {\n    pauseCurrentTimer();\n    if (currentIndex > 0) {\n      setCurrentIndex(prev => prev - 1);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading quiz questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 23\n  }, this);\n  if (submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for submitting the quiz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your final score: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n  if (!hasStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          lineHeight: '1.8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"You must answer all questions to complete the quiz.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Each question has only one correct answer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Each question has a time limit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No negative marking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Your final score will be shown after submission.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasStarted(true),\n        style: {\n          marginTop: '20px',\n          padding: '10px 20px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          fontSize: '16px',\n          cursor: 'pointer'\n        },\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = questions[currentIndex] || null;\n  const timer = currentQuestion ? timeRemaining[currentQuestion.id] || 0 : 0;\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No question found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Determine color for each question box in sidebar:\n  // Green: answered\n  // Red: time up and unanswered\n  // Grey: remaining\n  const getQuestionStatusColor = q => {\n    if (answers[q.id]) return '#4CAF50'; // green for answered\n    if (timeRemaining[q.id] === 0) return '#f44336'; // red for time up and unanswered\n    return '#ccc'; // grey for not answered yet\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '20px',\n      gap: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '18px',\n            fontWeight: 'bold',\n            color: timer <= 5 ? 'red' : 'black'\n          },\n          children: [\"\\u23F0 Time left: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          border: '1px solid #ccc',\n          padding: '15px',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          dangerouslySetInnerHTML: {\n            __html: currentQuestion.question\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), ['A', 'B', 'C', 'D'].map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            margin: '5px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${currentQuestion.id}`,\n            value: opt,\n            checked: answers[currentQuestion.id] === opt,\n            onChange: () => handleOptionChange(currentQuestion.id, opt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), opt === 'A' && ` ${currentQuestion.option_a}`, opt === 'B' && ` ${currentQuestion.option_b}`, opt === 'C' && ` ${currentQuestion.option_c}`, opt === 'D' && ` ${currentQuestion.option_d}`]\n        }, opt, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goPrev,\n          disabled: currentIndex === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goNext,\n          disabled: currentIndex === questions.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '120px',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        padding: '10px',\n        height: 'fit-content',\n        maxHeight: '80vh',\n        overflowY: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: '10px',\n        backgroundColor: '#fafafa'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          gap: '6px',\n          maxHeight: '60vh',\n          overflowY: 'auto',\n          width: '100%'\n        },\n        children: questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setCurrentIndex(idx),\n          title: `Question ${idx + 1}`,\n          style: {\n            width: '25px',\n            height: '25px',\n            borderRadius: '4px',\n            backgroundColor: getQuestionStatusColor(q),\n            color: 'white',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            cursor: 'pointer',\n            fontWeight: currentIndex === idx ? 'bold' : 'normal',\n            border: currentIndex === idx ? '2px solid #000' : 'none',\n            userSelect: 'none'\n          },\n          children: idx + 1\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          marginTop: 'auto',\n          padding: '10px 15px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          fontWeight: 'bold',\n          width: '100%',\n          cursor: 'pointer',\n          marginTop: '15px'\n        },\n        children: \"Submit Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"aDuadLKHR1MZNVLVRTfcjXcQ2kk=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","UserDashboard","_s","questions","setQuestions","answers","setAnswers","submitted","setSubmitted","score","setScore","loading","setLoading","currentIndex","setCurrentIndex","hasStarted","setHasStarted","timeRemaining","setTimeRemaining","timerRef","userId","localStorage","getItem","get","then","res","data","initialTimers","forEach","q","id","timer","catch","err","console","error","length","current","clearInterval","currentQuestion","qid","setInterval","prev","updated","setTimeout","handleAutoNext","handleOptionChange","questionId","selectedOption","nextIndexForward","findIndex","idx","anyUnansweredIndex","allTimersZero","every","handleSubmit","calculatedScore","responses","selected","isCorrect","correct_answer","push","question_id","selected_answer","is_correct","post","user_id","log","pauseCurrentTimer","goNext","goPrev","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","lineHeight","onClick","marginTop","backgroundColor","color","border","borderRadius","fontSize","cursor","getQuestionStatusColor","display","gap","flex","justifyContent","alignItems","fontWeight","marginBottom","dangerouslySetInnerHTML","__html","question","map","opt","margin","type","name","value","checked","onChange","option_a","option_b","option_c","option_d","disabled","width","height","maxHeight","overflowY","flexDirection","flexWrap","title","userSelect","_c","$RefreshReg$"],"sources":["C:/Mystuff/Quiz2.O App/frontend/src/components/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UserDashboard() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [hasStarted, setHasStarted] = useState(false);\r\n  const [timeRemaining, setTimeRemaining] = useState({});\r\n\r\n  const timerRef = useRef(null);\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  // Fetch questions\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/quiz')\r\n      .then(res => {\r\n        setQuestions(res.data);\r\n        const initialTimers = {};\r\n        res.data.forEach(q => {\r\n          initialTimers[q.id] = q.timer || 30;\r\n        });\r\n        setTimeRemaining(initialTimers);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error('❌ Error fetching quiz:', err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // Timer logic on question change & start\r\n  useEffect(() => {\r\n    if (!hasStarted || submitted || questions.length === 0) return;\r\n\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n\r\n    const currentQuestion = questions[currentIndex];\r\n    if (!currentQuestion) return;\r\n\r\n    const qid = currentQuestion.id;\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeRemaining(prev => {\r\n        const updated = { ...prev };\r\n        if (updated[qid] <= 1) {\r\n          clearInterval(timerRef.current);\r\n          updated[qid] = 0;\r\n          setTimeout(() => handleAutoNext(), 500);\r\n        } else {\r\n          updated[qid] -= 1;\r\n        }\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timerRef.current);\r\n\r\n  }, [currentIndex, hasStarted, submitted, questions]);\r\n\r\n  const handleOptionChange = (questionId, selectedOption) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: selectedOption,\r\n    }));\r\n  };\r\n\r\n  const handleAutoNext = () => {\r\n    // Find next unanswered question with time remaining after currentIndex\r\n    const nextIndexForward = questions.findIndex((q, idx) =>\r\n      idx > currentIndex && !answers[q.id] && timeRemaining[q.id] > 0\r\n    );\r\n\r\n    if (nextIndexForward !== -1) {\r\n      setCurrentIndex(nextIndexForward);\r\n      return;\r\n    }\r\n\r\n    // If none forward, check unanswered with time left anywhere\r\n    const anyUnansweredIndex = questions.findIndex(q =>\r\n      !answers[q.id] && timeRemaining[q.id] > 0\r\n    );\r\n\r\n    if (anyUnansweredIndex !== -1) {\r\n      setCurrentIndex(anyUnansweredIndex);\r\n      return;\r\n    }\r\n\r\n    // If no unanswered questions with time left, submit quiz\r\n    // **Important change:** Only auto-submit here if all timers are 0\r\n    // So check if all timers are 0 before submitting\r\n    const allTimersZero = questions.every(q => timeRemaining[q.id] === 0);\r\n    if (allTimersZero) {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (submitted) return;\r\n\r\n    let calculatedScore = 0;\r\n    const responses = [];\r\n\r\n    questions.forEach((q) => {\r\n      const selected = answers[q.id];\r\n      const isCorrect = selected === q.correct_answer;\r\n\r\n      if (selected) {\r\n        responses.push({\r\n          question_id: q.id,\r\n          selected_answer: selected,\r\n          is_correct: isCorrect,\r\n        });\r\n\r\n        if (isCorrect) calculatedScore += 1;\r\n      }\r\n    });\r\n\r\n    setScore(calculatedScore);\r\n    setSubmitted(true);\r\n    clearInterval(timerRef.current);\r\n\r\n    try {\r\n      await axios.post('http://localhost:3000/submit-quiz', {\r\n        user_id: userId,\r\n        score: calculatedScore,\r\n        responses,\r\n      });\r\n      console.log('✅ Quiz submitted');\r\n    } catch (err) {\r\n      console.error('❌ Failed to submit quiz:', err);\r\n    }\r\n  };\r\n\r\n  // Pause current timer before navigation\r\n  const pauseCurrentTimer = () => {\r\n    if (timerRef.current) clearInterval(timerRef.current);\r\n  };\r\n\r\n  // Navigate to next question & pause current timer\r\n  const goNext = () => {\r\n    pauseCurrentTimer();\r\n    if (currentIndex < questions.length - 1) {\r\n      setCurrentIndex(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  // Navigate to previous question & pause current timer\r\n  const goPrev = () => {\r\n    pauseCurrentTimer();\r\n    if (currentIndex > 0) {\r\n      setCurrentIndex(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading quiz questions...</p>;\r\n\r\n  if (submitted) {\r\n    return (\r\n      <div style={{ padding: '20px' }}>\r\n        <h2>Thank you for submitting the quiz!</h2>\r\n        <p>Your final score: <strong>{score}</strong></p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!hasStarted) {\r\n    return (\r\n      <div style={{ padding: '20px' }}>\r\n        <h2>Quiz Rules</h2>\r\n        <ul style={{ lineHeight: '1.8' }}>\r\n          <li>You must answer all questions to complete the quiz.</li>\r\n          <li>Each question has only one correct answer.</li>\r\n          <li>Each question has a time limit.</li>\r\n          <li>No negative marking.</li>\r\n          <li>Your final score will be shown after submission.</li>\r\n        </ul>\r\n        <button\r\n          onClick={() => setHasStarted(true)}\r\n          style={{\r\n            marginTop: '20px',\r\n            padding: '10px 20px',\r\n            backgroundColor: '#4CAF50',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '5px',\r\n            fontSize: '16px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Start Quiz\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentQuestion = questions[currentIndex] || null;\r\n  const timer = currentQuestion ? (timeRemaining[currentQuestion.id] || 0) : 0;\r\n\r\n  if (!currentQuestion) {\r\n    return <p>No question found.</p>;\r\n  }\r\n\r\n  // Determine color for each question box in sidebar:\r\n  // Green: answered\r\n  // Red: time up and unanswered\r\n  // Grey: remaining\r\n  const getQuestionStatusColor = (q) => {\r\n    if (answers[q.id]) return '#4CAF50'; // green for answered\r\n    if (timeRemaining[q.id] === 0) return '#f44336'; // red for time up and unanswered\r\n    return '#ccc'; // grey for not answered yet\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', padding: '20px', gap: '20px' }}>\r\n      {/* Main quiz content - left */}\r\n      <div style={{ flex: 1 }}>\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center'\r\n        }}>\r\n          <h2>Question {currentIndex + 1} of {questions.length}</h2>\r\n          <div style={{\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            color: timer <= 5 ? 'red' : 'black'\r\n          }}>\r\n            ⏰ Time left: {timer}s\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{\r\n          marginBottom: '20px',\r\n          border: '1px solid #ccc',\r\n          padding: '15px',\r\n          borderRadius: '8px'\r\n        }}>\r\n          <h3 dangerouslySetInnerHTML={{ __html: currentQuestion.question }} />\r\n          {['A', 'B', 'C', 'D'].map(opt => (\r\n            <label key={opt} style={{ display: 'block', margin: '5px 0' }}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${currentQuestion.id}`}\r\n                value={opt}\r\n                checked={answers[currentQuestion.id] === opt}\r\n                onChange={() => handleOptionChange(currentQuestion.id, opt)}\r\n              />\r\n              {opt === 'A' && ` ${currentQuestion.option_a}`}\r\n              {opt === 'B' && ` ${currentQuestion.option_b}`}\r\n              {opt === 'C' && ` ${currentQuestion.option_c}`}\r\n              {opt === 'D' && ` ${currentQuestion.option_d}`}\r\n            </label>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Navigation buttons - no submit button here */}\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <button onClick={goPrev} disabled={currentIndex === 0}>\r\n            Previous\r\n          </button>\r\n\r\n          <button onClick={goNext} disabled={currentIndex === questions.length - 1}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right side question status column */}\r\n      <div style={{\r\n        width: '120px',\r\n        border: '1px solid #ddd',\r\n        borderRadius: '8px',\r\n        padding: '10px',\r\n        height: 'fit-content',\r\n        maxHeight: '80vh',\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        gap: '10px',\r\n        backgroundColor: '#fafafa',\r\n      }}>\r\n        <h3 style={{ marginBottom: '10px' }}>Status</h3>\r\n        <div style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'center',\r\n          gap: '6px',\r\n          maxHeight: '60vh',\r\n          overflowY: 'auto',\r\n          width: '100%',\r\n        }}>\r\n          {questions.map((q, idx) => (\r\n            <div\r\n              key={q.id}\r\n              onClick={() => setCurrentIndex(idx)}\r\n              title={`Question ${idx + 1}`}\r\n              style={{\r\n                width: '25px',\r\n                height: '25px',\r\n                borderRadius: '4px',\r\n                backgroundColor: getQuestionStatusColor(q),\r\n                color: 'white',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                cursor: 'pointer',\r\n                fontWeight: currentIndex === idx ? 'bold' : 'normal',\r\n                border: currentIndex === idx ? '2px solid #000' : 'none',\r\n                userSelect: 'none',\r\n              }}\r\n            >\r\n              {idx + 1}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Submit button fixed at bottom of right column */}\r\n        <button\r\n          onClick={handleSubmit}\r\n          style={{\r\n            marginTop: 'auto',\r\n            padding: '10px 15px',\r\n            backgroundColor: '#4CAF50',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '5px',\r\n            fontWeight: 'bold',\r\n            width: '100%',\r\n            cursor: 'pointer',\r\n            marginTop: '15px',\r\n          }}\r\n        >\r\n          Submit Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}