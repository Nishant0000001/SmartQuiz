{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mystuff\\\\Quiz2.O App\\\\frontend\\\\src\\\\components\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport QuestionCard from './QuestionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = ({\n  userId\n}) => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  useEffect(() => {\n    axios.get('http://localhost:3000/quiz').then(res => setQuestions(res.data)).catch(err => console.error(err));\n  }, []);\n  const handleSelect = (qid, answer) => {\n    setAnswers(prev => ({\n      ...prev,\n      [qid]: answer\n    }));\n  };\n  const handleSubmit = async () => {\n    const payload = {\n      userId,\n      answers: Object.keys(answers).map(qid => ({\n        question_id: parseInt(qid),\n        selected_answer: answers[qid]\n      }))\n    };\n    try {\n      await axios.post('http://localhost:3000/submit-quiz', payload);\n      alert('✅ Quiz submitted successfully');\n    } catch (err) {\n      console.error(err);\n      alert('❌ Submission failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), questions.map(q => /*#__PURE__*/_jsxDEV(QuestionCard, {\n      question: q,\n      selected: answers[q.id],\n      onSelect: handleSelect\n    }, q.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"mt-4 bg-green-600 text-white px-4 py-2\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"oYVJJyJHz36kVu40mwh9jR1WCQ0=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","QuestionCard","jsxDEV","_jsxDEV","UserDashboard","userId","_s","questions","setQuestions","answers","setAnswers","get","then","res","data","catch","err","console","error","handleSelect","qid","answer","prev","handleSubmit","payload","Object","keys","map","question_id","parseInt","selected_answer","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","q","question","selected","id","onSelect","onClick","_c","$RefreshReg$"],"sources":["C:/Mystuff/Quiz2.O App/frontend/src/components/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport QuestionCard from './QuestionCard';\r\n\r\nconst UserDashboard = ({ userId }) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3000/quiz')\r\n      .then(res => setQuestions(res.data))\r\n      .catch(err => console.error(err));\r\n  }, []);\r\n\r\n  const handleSelect = (qid, answer) => {\r\n    setAnswers(prev => ({ ...prev, [qid]: answer }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const payload = {\r\n      userId,\r\n      answers: Object.keys(answers).map(qid => ({\r\n        question_id: parseInt(qid),\r\n        selected_answer: answers[qid]\r\n      }))\r\n    };\r\n\r\n    try {\r\n      await axios.post('http://localhost:3000/submit-quiz', payload);\r\n      alert('✅ Quiz submitted successfully');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('❌ Submission failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-3xl mx-auto\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Quiz</h2>\r\n      {questions.map(q => (\r\n        <QuestionCard key={q.id} question={q} selected={answers[q.id]} onSelect={handleSelect} />\r\n      ))}\r\n      <button onClick={handleSubmit} className=\"mt-4 bg-green-600 text-white px-4 py-2\">Submit Quiz</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACW,GAAG,CAAC,4BAA4B,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIL,YAAY,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC,CACnCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGA,CAACC,GAAG,EAAEC,MAAM,KAAK;IACpCX,UAAU,CAACY,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACF,GAAG,GAAGC;IAAO,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG;MACdnB,MAAM;MACNI,OAAO,EAAEgB,MAAM,CAACC,IAAI,CAACjB,OAAO,CAAC,CAACkB,GAAG,CAACP,GAAG,KAAK;QACxCQ,WAAW,EAAEC,QAAQ,CAACT,GAAG,CAAC;QAC1BU,eAAe,EAAErB,OAAO,CAACW,GAAG;MAC9B,CAAC,CAAC;IACJ,CAAC;IAED,IAAI;MACF,MAAMpB,KAAK,CAAC+B,IAAI,CAAC,mCAAmC,EAAEP,OAAO,CAAC;MAC9DQ,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC,OAAOhB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBgB,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC/B,OAAA;MAAI8B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChD/B,SAAS,CAACoB,GAAG,CAACY,CAAC,iBACdpC,OAAA,CAACF,YAAY;MAAYuC,QAAQ,EAAED,CAAE;MAACE,QAAQ,EAAEhC,OAAO,CAAC8B,CAAC,CAACG,EAAE,CAAE;MAACC,QAAQ,EAAExB;IAAa,GAAnEoB,CAAC,CAACG,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiE,CACzF,CAAC,eACFnC,OAAA;MAAQyC,OAAO,EAAErB,YAAa;MAACU,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnG,CAAC;AAEV,CAAC;AAAChC,EAAA,CAzCIF,aAAa;AAAAyC,EAAA,GAAbzC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}